---
- name: Build Stirling-PDF LXC Container
  hosts: localhost
  gather_facts: no
  vars_files:
    - group_vars/all.yml
    - group_vars/vault.yml
  vars:
    ansible_ssh_pass: "{{ proxmox_ansible_password }}"
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

  tasks:
    - name: Remove {{ stirling.ip_address }} from known_hosts
      ansible.builtin.command: ssh-keygen -R {{ stirling.ip_address }}
      delegate_to: localhost
      become: false

    - import_tasks: tasks/create_lxc.yml
      vars:
        lxc_name: "{{ stirling.name }}"
        lxc_vmid: "{{ stirling.vmid }}"
        lxc_ip: "{{ stirling.ip_address }}"
        lxc_gateway: "{{ network.gateway }}"
        lxc_cont_password: "{{ lxc_password }}"
        lxc_storage: "{{ storage.pool }}"
        lxc_memory: "{{ container_defaults.memory }}"
        lxc_cores: "{{ container_defaults.cores }}"
        lxc_disk: "{{ container_defaults.disk }}"
        lxc_swap: "{{ container_defaults.swap }}"
        lxc_tags: "{{ stirling.tags }}" 
        proxmox_node: "{{ proxmox.node_name }}"
        proxmox_user: "{{ proxmox.api_user }}"
        proxmox_password: "{{ proxmox.api_password }}"
        proxmox_host: "{{ proxmox.api_host }}"
        template_pool: "{{ storage.templatepool }}"
        template_file: "{{ storage.template }}"


- name: Configure Stirling-PDF Inside LXC
  hosts: stirling_pdf
  gather_facts: no
  become: true
  vars_files:
    - group_vars/all.yml
    - group_vars/vault.yml
  vars:
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    lxc_container_name: stirlingpdf-lxc
    stirling_pdf_version_tag: "main"
    github_repo_url: "https://github.com/Stirling-Tools/Stirling-PDF.git"
    app_jar_download_url: "https://files.stirlingpdf.com/Stirling-PDF.jar"
    stirling_install_dir: "/opt/Stirling-PDF"
    jbig2enc_repo: "https://github.com/agl/jbig2enc.git"

  tasks:
    - name: Update and upgrade apt packages
      ansible.builtin.apt:
        update_cache: yes
        upgrade: yes

    - name: Install all required packages
      ansible.builtin.apt:
        name:
          - ca-certificates
          - tzdata
          - tini
          - bash
          - curl
          - openssl
          - libreoffice
          - poppler-utils
          - unpaper
          - python3
          - ocrmypdf
          - libssl-dev
          - openjdk-17-jre-headless
          - tesseract-ocr-eng
          - tesseract-ocr-chi-sim
          - tesseract-ocr-deu
          - tesseract-ocr-fra
          - tesseract-ocr-por
          - python3-opencv
          - python3-pip
          - python3-pil
          - python3.11-venv
          - fonts-urw-base35
          - libcap2-bin
          - automake
          - autoconf
          - libtool
          - libleptonica-dev
          - pkg-config
          - zlib1g-dev
          - make
          - g++
          - git
          - tesseract-ocr-all
        state: present
        update_cache: yes

    - name: Clone jbig2enc repo
      git:
        repo: "{{ jbig2enc_repo }}"
        dest: "/root/.git/jbig2enc"
        update: no

    - name: Build and install jbig2enc
      block:
        - name: Run autogen.sh
          command: ./autogen.sh
          args:
            chdir: "/root/.git/jbig2enc"

        - name: Run configure
          command: ./configure
          args:
            chdir: "/root/.git/jbig2enc"

        - name: Compile jbig2enc
          command: make
          args:
            chdir: "/root/.git/jbig2enc"

        - name: Install jbig2enc
          command: make install
          args:
            chdir: "/root/.git/jbig2enc"

    - name: Install required Python packages
      ansible.builtin.command: >
        pip3 install uno opencv-python-headless unoserver pngquant WeasyPrint --break-system-packages
      args:
        creates: /usr/local/bin/unoserver

    - name: Create Stirling-PDF installation directory
      file:
        path: "{{ stirling_install_dir }}"
        state: directory
        mode: '0755'

    - name: Download Stirling-PDF JAR
      get_url:
        url: "{{ app_jar_download_url }}"
        dest: "{{ stirling_install_dir }}/Stirling-PDF.jar"
        mode: '0644'

    - name: Clone Stirling-PDF repo (for scripts)
      git:
        repo: "{{ github_repo_url }}"
        dest: "/tmp/Stirling-PDF"
        version: main
        depth: 1

    - name: Copy scripts folder to installation path
      copy:
        src: "/tmp/Stirling-PDF/scripts"
        dest: "{{ stirling_install_dir }}/scripts"
        remote_src: yes

    - name: Create .env file
      file:
        path: "{{ stirling_install_dir }}/.env"
        state: touch
        mode: '0644'

    - name: Create systemd service
      copy:
        dest: /etc/systemd/system/stirlingpdf.service
        content: |
          [Unit]
          Description=Stirling-PDF service
          After=syslog.target network.target

          [Service]
          SuccessExitStatus=143
          User=root
          Group=root
          Type=simple
          EnvironmentFile={{ stirling_install_dir }}/.env
          WorkingDirectory={{ stirling_install_dir }}
          ExecStart=/usr/bin/java -jar Stirling-PDF.jar
          ExecStop=/bin/kill -15 $MAINPID

          [Install]
          WantedBy=multi-user.target
        mode: '0644'

    - name: Reload and enable Stirling-PDF systemd service
      systemd:
        name: stirlingpdf.service
        daemon_reload: yes
        enabled: yes
        state: started
